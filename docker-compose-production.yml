version: "3.2"
services:
  db:
    image: postgres:14
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB: ${POSTGRES_DB}
      - POSTGRES_USER: ${POSTGRES_USER}
      - POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  api:
    image: dacit/api
    build:
      context: .
      dockerfile: ./api/Dockerfile
    working_dir: /api/dacit_api/
    volumes:
      - type: bind
        source: ./import
        target: /import
        read_only: true
      - type: bind
        source: ./api/dacit_api/media
        target: /media
    environment:
      - POETRY_VIRTUALENVS_CREATE: False
      - PYTHONPATH: /api/dacit_api/
      - POSTGRES_DB: ${POSTGRES_DB}
      - POSTGRES_USER: ${POSTGRES_USER}
      - POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      - POSTGRES_HOST: "db"
      - POSTGRES_PORT: 5432
      - DJANGO_DEBUG: ${DJANGO_DEBUG}
      - DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
    depends_on:
      - db
  #    ports:
  #      - 8000:8000
  # Activate again when shipping container
  #    env_file:
  #      - ./api/src/artigo_api/.env

  web-api:
    image: nginx:latest
    volumes:
      - type: bind
        source: ./web-api-nginx.conf
        target: /etc/nginx/conf.d/api_nginx.conf
        read_only: true
      - type: bind
        source: ./uwsgi_params
        target: /uwsgi_params
        read_only: true
    depends_on:
      - api
    labels:
      com.centurylinklabs.watchtower.enable: "false"
      traefik.http.routers.dacit-api.rule: Host(${DACIT_WEB})
      traefik.http.routers.dacit-api.tls: "true"
      traefik.http.routers.dacit-api.entrypoints: web,websecure
      traefik.http.routers.dacit-api.tls.certresolver: ${CERTRESOLVER}
      traefik.http.services.dacit-api.loadbalancer.server.port: "8000"
      traefik.enable: "true"

  web:
    image: dacit/dacit
    build:
      context: .
      dockerfile: ./dacit/Dockerfile
    volumes:
      - type: bind
        source: ./dacit/build/web
        target: /web
    working_dir: /dacit
    depends_on:
      - api
    labels:
      com.centurylinklabs.watchtower.enable: "false"
      traefik.http.routers.dacit.rule: Host(${DACIT_API})
      traefik.http.routers.dacit.tls: "true"
      traefik.http.routers.dacit.entrypoints: web,websecure
      traefik.http.routers.dacit.tls.certresolver: ${CERTRESOLVER}
      traefik.enable: "true"

volumes:
  db-data:
